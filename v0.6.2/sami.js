
window.projectVersion = 'v0.6.2';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:CharlotteDunois" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="CharlotteDunois.html">CharlotteDunois</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:CharlotteDunois_Yasmin" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="CharlotteDunois/Yasmin.html">Yasmin</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:CharlotteDunois_Yasmin_HTTP" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="CharlotteDunois/Yasmin/HTTP.html">HTTP</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:CharlotteDunois_Yasmin_HTTP_DiscordAPIException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/HTTP/DiscordAPIException.html">DiscordAPIException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:CharlotteDunois_Yasmin_Interfaces" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="CharlotteDunois/Yasmin/Interfaces.html">Interfaces</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:CharlotteDunois_Yasmin_Interfaces_CategoryChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/CategoryChannelInterface.html">CategoryChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_ChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html">ChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_ChannelStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html">ChannelStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_DMChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/DMChannelInterface.html">DMChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_EmojiStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html">EmojiStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GroupDMChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GroupDMChannelInterface.html">GroupDMChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GuildChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html">GuildChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GuildMemberStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html">GuildMemberStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GuildNewsChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html">GuildNewsChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GuildStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html">GuildStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GuildStoreChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GuildStoreChannelInterface.html">GuildStoreChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GuildTextChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html">GuildTextChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_GuildVoiceChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/GuildVoiceChannelInterface.html">GuildVoiceChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_MessageStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html">MessageStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_PresenceStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html">PresenceStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_RatelimitBucketInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html">RatelimitBucketInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_RoleStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html">RoleStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_StorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/StorageInterface.html">StorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_TextChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html">TextChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_UserStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html">UserStorageInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_VoiceChannelInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/VoiceChannelInterface.html">VoiceChannelInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_WSCompressionInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html">WSCompressionInterface</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Interfaces_WSEncodingInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html">WSEncodingInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:CharlotteDunois_Yasmin_Models" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="CharlotteDunois/Yasmin/Models.html">Models</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:CharlotteDunois_Yasmin_Models_Activity" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Activity.html">Activity</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_AuditLog" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/AuditLog.html">AuditLog</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_AuditLogEntry" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/AuditLogEntry.html">AuditLogEntry</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Base" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Base.html">Base</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_CategoryChannel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/CategoryChannel.html">CategoryChannel</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_ChannelStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/ChannelStorage.html">ChannelStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_ClientBase" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/ClientBase.html">ClientBase</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_ClientStatus" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/ClientStatus.html">ClientStatus</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_ClientUser" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/ClientUser.html">ClientUser</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_DMChannel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/DMChannel.html">DMChannel</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Emoji" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Emoji.html">Emoji</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_EmojiStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/EmojiStorage.html">EmojiStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_GroupDMChannel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/GroupDMChannel.html">GroupDMChannel</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Guild" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Guild.html">Guild</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_GuildBan" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/GuildBan.html">GuildBan</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_GuildMember" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/GuildMember.html">GuildMember</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_GuildMemberStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/GuildMemberStorage.html">GuildMemberStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_GuildStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/GuildStorage.html">GuildStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_GuildStoreChannel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/GuildStoreChannel.html">GuildStoreChannel</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Invite" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Invite.html">Invite</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Message" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Message.html">Message</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_MessageActivity" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/MessageActivity.html">MessageActivity</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_MessageApplication" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/MessageApplication.html">MessageApplication</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_MessageAttachment" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/MessageAttachment.html">MessageAttachment</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_MessageEmbed" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/MessageEmbed.html">MessageEmbed</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_MessageMentions" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/MessageMentions.html">MessageMentions</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_MessageReaction" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/MessageReaction.html">MessageReaction</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_MessageStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/MessageStorage.html">MessageStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_OAuthApplication" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/OAuthApplication.html">OAuthApplication</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_PartialChannel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/PartialChannel.html">PartialChannel</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_PartialGuild" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/PartialGuild.html">PartialGuild</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_PermissionOverwrite" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/PermissionOverwrite.html">PermissionOverwrite</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Permissions" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Permissions.html">Permissions</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Presence" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Presence.html">Presence</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_PresenceStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/PresenceStorage.html">PresenceStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_RichPresenceAssets" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/RichPresenceAssets.html">RichPresenceAssets</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Role" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Role.html">Role</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_RoleStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/RoleStorage.html">RoleStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Shard" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Shard.html">Shard</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Storage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Storage.html">Storage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_TextChannel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/TextChannel.html">TextChannel</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_User" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/User.html">User</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_UserConnection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/UserConnection.html">UserConnection</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_UserStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/UserStorage.html">UserStorage</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_VoiceChannel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/VoiceChannel.html">VoiceChannel</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_VoiceRegion" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/VoiceRegion.html">VoiceRegion</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Models_Webhook" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Models/Webhook.html">Webhook</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:CharlotteDunois_Yasmin_Traits" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="CharlotteDunois/Yasmin/Traits.html">Traits</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:CharlotteDunois_Yasmin_Traits_GuildChannelTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html">GuildChannelTrait</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Traits_TextChannelTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Traits/TextChannelTrait.html">TextChannelTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:CharlotteDunois_Yasmin_Utils" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="CharlotteDunois/Yasmin/Utils.html">Utils</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:CharlotteDunois_Yasmin_Utils_Collector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/Collector.html">Collector</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Utils_DataHelpers" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/DataHelpers.html">DataHelpers</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Utils_EventHelpers" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/EventHelpers.html">EventHelpers</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Utils_FileHelpers" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/FileHelpers.html">FileHelpers</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Utils_ImageHelpers" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/ImageHelpers.html">ImageHelpers</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Utils_MessageHelpers" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/MessageHelpers.html">MessageHelpers</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Utils_Snowflake" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/Snowflake.html">Snowflake</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Utils_URLHelpers" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Utils/URLHelpers.html">URLHelpers</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_Client" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/Client.html">Client</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_ClientEvents" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/ClientEvents.html">ClientEvents</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_DiscordException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/DiscordException.html">DiscordException</a>                    </div>                </li>                            <li data-name="class:CharlotteDunois_Yasmin_WebhookClient" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="CharlotteDunois/Yasmin/WebhookClient.html">WebhookClient</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "CharlotteDunois.html", "name": "CharlotteDunois", "doc": "Namespace CharlotteDunois"},{"type": "Namespace", "link": "CharlotteDunois/Yasmin.html", "name": "CharlotteDunois\\Yasmin", "doc": "Namespace CharlotteDunois\\Yasmin"},{"type": "Namespace", "link": "CharlotteDunois/Yasmin/HTTP.html", "name": "CharlotteDunois\\Yasmin\\HTTP", "doc": "Namespace CharlotteDunois\\Yasmin\\HTTP"},{"type": "Namespace", "link": "CharlotteDunois/Yasmin/Interfaces.html", "name": "CharlotteDunois\\Yasmin\\Interfaces", "doc": "Namespace CharlotteDunois\\Yasmin\\Interfaces"},{"type": "Namespace", "link": "CharlotteDunois/Yasmin/Models.html", "name": "CharlotteDunois\\Yasmin\\Models", "doc": "Namespace CharlotteDunois\\Yasmin\\Models"},{"type": "Namespace", "link": "CharlotteDunois/Yasmin/Traits.html", "name": "CharlotteDunois\\Yasmin\\Traits", "doc": "Namespace CharlotteDunois\\Yasmin\\Traits"},{"type": "Namespace", "link": "CharlotteDunois/Yasmin/Utils.html", "name": "CharlotteDunois\\Yasmin\\Utils", "doc": "Namespace CharlotteDunois\\Yasmin\\Utils"},
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin", "fromLink": "CharlotteDunois/Yasmin.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html", "name": "CharlotteDunois\\Yasmin\\ClientEvents", "doc": "&quot;Documents all Client events. ($client-&gt;on(&#039;name here&#039;, callable))&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_ready", "name": "CharlotteDunois\\Yasmin\\ClientEvents::ready", "doc": "&quot;Emitted each time the client turns ready.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_disconnect", "name": "CharlotteDunois\\Yasmin\\ClientEvents::disconnect", "doc": "&quot;Emitted when the shard gets disconnected from the gateway.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_reconnect", "name": "CharlotteDunois\\Yasmin\\ClientEvents::reconnect", "doc": "&quot;Emitted when the shard tries to reconnect.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_raw", "name": "CharlotteDunois\\Yasmin\\ClientEvents::raw", "doc": "&quot;Emitted when we receive a message from the gateway.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageDeleteRaw", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageDeleteRaw", "doc": "&quot;Emitted when an uncached message gets deleted.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageDeleteBulkRaw", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageDeleteBulkRaw", "doc": "&quot;Emitted when multple uncached messages gets deleted.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageUpdateRaw", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageUpdateRaw", "doc": "&quot;Emitted when an uncached message gets updated (does not mean the message got edited, check the edited timestamp for that).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_error", "name": "CharlotteDunois\\Yasmin\\ClientEvents::error", "doc": "&quot;Emitted when an error happens (inside the library or any listeners). You should always listen on this event.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_debug", "name": "CharlotteDunois\\Yasmin\\ClientEvents::debug", "doc": "&quot;Debug messages.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_ratelimit", "name": "CharlotteDunois\\Yasmin\\ClientEvents::ratelimit", "doc": "&quot;Ratelimit information.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_channelCreate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::channelCreate", "doc": "&quot;Emitted when a channel gets created.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_channelUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::channelUpdate", "doc": "&quot;Emitted when a channel gets updated.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_channelDelete", "name": "CharlotteDunois\\Yasmin\\ClientEvents::channelDelete", "doc": "&quot;Emitted when a channel gets deleted.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_channelPinsUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::channelPinsUpdate", "doc": "&quot;Emitted when a channel&#039;s pins gets updated. Due to the nature of the event, it&#039;s not possible to do much.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildCreate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildCreate", "doc": "&quot;Emitted when a guild gets joined.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildUpdate", "doc": "&quot;Emitted when a guild gets updated.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildDelete", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildDelete", "doc": "&quot;Emitted when a guild gets left.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildUnavailable", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildUnavailable", "doc": "&quot;Emitted when a guild becomes (un)available.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildBanAdd", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildBanAdd", "doc": "&quot;Emitted when someone gets banned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildBanRemove", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildBanRemove", "doc": "&quot;Emitted when someone gets unbanned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildMemberAdd", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildMemberAdd", "doc": "&quot;Emitted when an user joins a guild.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildMemberUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildMemberUpdate", "doc": "&quot;Emitted when a member gets updated.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildMemberRemove", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildMemberRemove", "doc": "&quot;Emitted when an user leaves a guild.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_guildMembersChunk", "name": "CharlotteDunois\\Yasmin\\ClientEvents::guildMembersChunk", "doc": "&quot;Emitted when the gateway sends requested members. The collection consists of GuildMember instances, mapped by their user ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_roleCreate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::roleCreate", "doc": "&quot;Emitted when a role gets created.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_roleUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::roleUpdate", "doc": "&quot;Emitted when a role gets updated.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_roleDelete", "name": "CharlotteDunois\\Yasmin\\ClientEvents::roleDelete", "doc": "&quot;Emitted when a role gets deleted.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_message", "name": "CharlotteDunois\\Yasmin\\ClientEvents::message", "doc": "&quot;Emitted when a message gets received.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageUpdate", "doc": "&quot;Emitted when a (cached) message gets updated (does not mean the message got edited, check the edited timestamp for that).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageDelete", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageDelete", "doc": "&quot;Emitted when a (cached) message gets deleted.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageDeleteBulk", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageDeleteBulk", "doc": "&quot;Emitted when multiple (cached) message gets deleted. The collection consists of Message instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageReactionAdd", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageReactionAdd", "doc": "&quot;Emitted when someone reacts to a (cached) message.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageReactionRemove", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageReactionRemove", "doc": "&quot;Emitted when a reaction from a (cached) message gets removed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_messageReactionRemoveAll", "name": "CharlotteDunois\\Yasmin\\ClientEvents::messageReactionRemoveAll", "doc": "&quot;Emitted when all reactions from a (cached) message gets removed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_presenceUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::presenceUpdate", "doc": "&quot;Emitted when a presence updates.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_typingStart", "name": "CharlotteDunois\\Yasmin\\ClientEvents::typingStart", "doc": "&quot;Emitted when someone starts typing in the channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_typingStop", "name": "CharlotteDunois\\Yasmin\\ClientEvents::typingStop", "doc": "&quot;Emitted when someone stops typing in the channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_userUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::userUpdate", "doc": "&quot;Emitted when someone updates their user account (username\/avatar\/etc.).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_voiceServerUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::voiceServerUpdate", "doc": "&quot;Emitted when Discord responds to the user&#039;s Voice State Update event.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\ClientEvents", "fromLink": "CharlotteDunois/Yasmin/ClientEvents.html", "link": "CharlotteDunois/Yasmin/ClientEvents.html#method_voiceStateUpdate", "name": "CharlotteDunois\\Yasmin\\ClientEvents::voiceStateUpdate", "doc": "&quot;Emitted when a member&#039;s voice state changes (leaves\/joins\/etc.).&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/CategoryChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\CategoryChannelInterface", "doc": "&quot;Something all guild category channels implement.&quot;"},
                    
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface", "doc": "&quot;Something all channels implement.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html#method__patch", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface::_patch", "doc": "&quot;Internally patches the instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html#method_getId", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface::getId", "doc": "&quot;Gets the channel&#039;s ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelInterface.html#method_getCreatedTimestamp", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelInterface::getCreatedTimestamp", "doc": "&quot;Gets the timestamp of when this channel was created.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "doc": "&quot;Something all channel storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::resolve", "doc": "&quot;Resolves given data to a channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/ChannelStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\ChannelStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/DMChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\DMChannelInterface", "doc": "&quot;Something all direct message channels implement.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\DMChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/DMChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/DMChannelInterface.html#method_isRecipient", "name": "CharlotteDunois\\Yasmin\\Interfaces\\DMChannelInterface::isRecipient", "doc": "&quot;Determines whether a given user is a recipient of this channel.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "doc": "&quot;Something all emoji storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::resolve", "doc": "&quot;Resolves given data to an emoji.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/EmojiStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\EmojiStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GroupDMChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GroupDMChannelInterface", "doc": "&quot;Something all group direct message channels implement.&quot;"},
                    
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "doc": "&quot;Something all guild channels implement.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_clone", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::clone", "doc": "&quot;Clones a guild channel. Resolves with an instance of GuildChannelInterface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::edit", "doc": "&quot;Edits the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::delete", "doc": "&quot;Deletes the channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_permissionsFor", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::permissionsFor", "doc": "&quot;Returns the permissions for the given member.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_overwritesFor", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::overwritesFor", "doc": "&quot;Returns the permissions overwrites for the given member.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_overwritePermissions", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::overwritePermissions", "doc": "&quot;Overwrites the permissions for a member or role in this channel. Resolves with an instance of PermissionOverwrite.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_lockPermissions", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::lockPermissions", "doc": "&quot;Locks in the permission overwrites from the parent channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_setName", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::setName", "doc": "&quot;Sets the name of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_setNSFW", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::setNSFW", "doc": "&quot;Sets the nsfw flag of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_setParent", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::setParent", "doc": "&quot;Sets the parent of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_setPermissionOverwrites", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::setPermissionOverwrites", "doc": "&quot;Sets the permission overwrites of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_setPosition", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::setPosition", "doc": "&quot;Sets the position of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_getName", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::getName", "doc": "&quot;Gets the channel&#039;s name.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_getGuild", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::getGuild", "doc": "&quot;Gets the associated guild.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_getPosition", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::getPosition", "doc": "&quot;Gets the channel&#039;s position.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_getPermissionOverwrites", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::getPermissionOverwrites", "doc": "&quot;Gets the channel&#039;s permission overwrites.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildChannelInterface.html#method_getParent", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildChannelInterface::getParent", "doc": "&quot;Gets the channel&#039;s parent, or null.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "doc": "&quot;Something all guild member storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::resolve", "doc": "&quot;Resolves given data to a guildmember.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildMemberStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildMemberStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildNewsChannelInterface", "doc": "&quot;Something all guild news channels implement.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildNewsChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html#method_createInvite", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildNewsChannelInterface::createInvite", "doc": "&quot;Creates an invite. Resolves with an instance of Invite.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildNewsChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html#method_fetchInvites", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildNewsChannelInterface::fetchInvites", "doc": "&quot;Fetches all invites of this channel. Resolves with a Collection of Invite instances, mapped by their code.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildNewsChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildNewsChannelInterface.html#method_setTopic", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildNewsChannelInterface::setTopic", "doc": "&quot;Sets the topic of the channel. Resolves with $this.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "doc": "&quot;Something all guild storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::resolve", "doc": "&quot;Resolves given data to a guild.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildStoreChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildStoreChannelInterface", "doc": "&quot;Something all guild store channels implement.&quot;"},
                    
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface", "doc": "&quot;Something all guild text channels implement.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html#method_bulkDelete", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface::bulkDelete", "doc": "&quot;Deletes multiple messages at once. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html#method_createInvite", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface::createInvite", "doc": "&quot;Creates an invite. Resolves with an instance of Invite.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html#method_fetchInvites", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface::fetchInvites", "doc": "&quot;Fetches all invites of this channel. Resolves with a Collection of Invite instances, mapped by their code.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html#method_setSlowmode", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface::setSlowmode", "doc": "&quot;Sets the slowmode in seconds for this channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildTextChannelInterface.html#method_setTopic", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildTextChannelInterface::setTopic", "doc": "&quot;Sets the topic of the channel. Resolves with $this.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildVoiceChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildVoiceChannelInterface", "doc": "&quot;Something all guild voice channels implement.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\GuildVoiceChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/GuildVoiceChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/GuildVoiceChannelInterface.html#method_setTopic", "name": "CharlotteDunois\\Yasmin\\Interfaces\\GuildVoiceChannelInterface::setTopic", "doc": "&quot;Sets the topic of the channel. Resolves with $this.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "doc": "&quot;Something all message storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/MessageStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\MessageStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "doc": "&quot;Something all presence storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::resolve", "doc": "&quot;Resolves given data to a presence.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/PresenceStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\PresenceStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "doc": "&quot;This interface defines required methods and their arguments for managing route ratelimits using various systems.&lt;br&gt;\nThe ratelimit bucket queue is always managed in memory (as in belongs to that process), however the ratelimits are distributed to the used system.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::__construct", "doc": "&quot;Initializes the bucket.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method___destruct", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::__destruct", "doc": "&quot;Destroys the bucket.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_isBusy", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::isBusy", "doc": "&quot;Whether we are busy.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_setBusy", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::setBusy", "doc": "&quot;Sets the busy flag (marking as running).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_handleRatelimit", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::handleRatelimit", "doc": "&quot;Sets the ratelimits from the response.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_getEndpoint", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::getEndpoint", "doc": "&quot;Returns the endpoint this bucket is for.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_size", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::size", "doc": "&quot;Returns the size of the queue.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_push", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::push", "doc": "&quot;Pushes a new request into the queue.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_unshift", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::unshift", "doc": "&quot;Unshifts a new request into the queue. Modifies remaining ratelimit.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_getMeta", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::getMeta", "doc": "&quot;Retrieves ratelimit meta data.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_shift", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::shift", "doc": "&quot;Returns the first queue item or false. Modifies remaining ratelimit.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RatelimitBucketInterface.html#method_clear", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RatelimitBucketInterface::clear", "doc": "&quot;Unsets all queue items.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "doc": "&quot;Something all role storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::resolve", "doc": "&quot;Resolves given data to a Role.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/RoleStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\RoleStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "doc": "&quot;Something all storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_count", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::count", "doc": "&quot;Returns the total number of items. From Countable interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_copy", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::copy", "doc": "&quot;Returns a copy of itself. This does not make a copy of the stored data.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::delete", "doc": "&quot;Removes an item.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_clear", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::clear", "doc": "&quot;Clears the Storage.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_indexOf", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::indexOf", "doc": "&quot;Returns the position of the given value in the storage. Returns null if the given value couldn&#039;t be found.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_filter", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::filter", "doc": "&quot;Filters the storage by a given callback, keeping only those items that pass a given truth test. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_first", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::first", "doc": "&quot;Returns the first element that passes a given truth test.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_last", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::last", "doc": "&quot;Returns the last element that passes a given truth test.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_reduce", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::reduce", "doc": "&quot;Reduces the collection to a single value, passing the result of each iteration into the subsequent iteration.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_sort", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::sort", "doc": "&quot;Sorts the collection. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_sortKey", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::sortKey", "doc": "&quot;Sorts the collection by key. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_sortCustom", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::sortCustom", "doc": "&quot;Sorts the collection using a custom sorting function. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_sortCustomKey", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::sortCustomKey", "doc": "&quot;Sorts the collection by key using a custom sorting function. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_max", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::max", "doc": "&quot;Return the maximum value of a given key.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/StorageInterface.html#method_min", "name": "CharlotteDunois\\Yasmin\\Interfaces\\StorageInterface::min", "doc": "&quot;Return the minimum value of a given key.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "doc": "&quot;Something all text channels implement.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_collectMessages", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::collectMessages", "doc": "&quot;Collects messages during a specific duration (and max. amount). Resolves with a Collection of Message instances, mapped by their IDs.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_fetchMessage", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::fetchMessage", "doc": "&quot;Fetches a specific message using the ID. Resolves with an instance of Message.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_fetchMessages", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::fetchMessages", "doc": "&quot;Fetches messages of this channel. Resolves with a Collection of Message instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_send", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::send", "doc": "&quot;Sends a message to a channel. Resolves with an instance of Message, or a Collection of Message instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_startTyping", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::startTyping", "doc": "&quot;Starts sending the typing indicator in this channel. Counts up a triggered typing counter.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_stopTyping", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::stopTyping", "doc": "&quot;Stops sending the typing indicator in this channel. Counts down a triggered typing counter.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_typingCount", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::typingCount", "doc": "&quot;Returns the amount of user typing in this channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_isTyping", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::isTyping", "doc": "&quot;Determines whether the given user is typing in this channel or not.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_getMessages", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::getMessages", "doc": "&quot;Gets the storage with all cached messages.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/TextChannelInterface.html#method_getLastMessageID", "name": "CharlotteDunois\\Yasmin\\Interfaces\\TextChannelInterface::getLastMessageID", "doc": "&quot;Gets the ID of the last sent message in this channel.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "doc": "&quot;Something all user storages implement. The storage also is used as factory.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_current", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::current", "doc": "&quot;Returns the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_key", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::key", "doc": "&quot;Fetch the key from the current element. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_next", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::next", "doc": "&quot;Advances the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_rewind", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::rewind", "doc": "&quot;Resets the internal pointer. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_valid", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::valid", "doc": "&quot;Checks if current position is valid. From Iterator interface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_all", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::all", "doc": "&quot;Returns all items.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::resolve", "doc": "&quot;Resolves given data to an user.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_patch", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::patch", "doc": "&quot;Patches an user (retrieves the user if the user exists), returns null if only the ID is in the array, or creates an user.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_has", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_get", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/UserStorageInterface.html#method_set", "name": "CharlotteDunois\\Yasmin\\Interfaces\\UserStorageInterface::set", "doc": "&quot;Sets a key-value pair.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/VoiceChannelInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\VoiceChannelInterface", "doc": "&quot;Something all voice channels implement.&quot;"},
                    
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface", "doc": "&quot;Interface for WS compressions. This is used internally.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html#method_supported", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface::supported", "doc": "&quot;Checks if the system supports it.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html#method_getName", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface::getName", "doc": "&quot;Returns compression name (for gateway query string).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html#method_isPayloadCompression", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface::isPayloadCompression", "doc": "&quot;Returns a boolean for the OP code 2 IDENTIFY packet &#039;compress&#039; parameter. The parameter is for payload compression.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html#method_init", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface::init", "doc": "&quot;Initializes the context.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html#method_destroy", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface::destroy", "doc": "&quot;Destroys the context.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSCompressionInterface.html#method_decompress", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSCompressionInterface::decompress", "doc": "&quot;Decompresses data.&quot;"},
            
            {"type": "Interface", "fromName": "CharlotteDunois\\Yasmin\\Interfaces", "fromLink": "CharlotteDunois/Yasmin/Interfaces.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface", "doc": "&quot;Interface for WS encodings. This is used internally.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html#method_getName", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface::getName", "doc": "&quot;Returns encoding name (for gateway query string).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html#method_supported", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface::supported", "doc": "&quot;Checks if the system supports it.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html#method_decode", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface::decode", "doc": "&quot;Decodes data.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html#method_encode", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface::encode", "doc": "&quot;Encodes data.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface", "fromLink": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html", "link": "CharlotteDunois/Yasmin/Interfaces/WSEncodingInterface.html#method_prepareMessage", "name": "CharlotteDunois\\Yasmin\\Interfaces\\WSEncodingInterface::prepareMessage", "doc": "&quot;Prepares the data to be sent.&quot;"},
            
            
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin", "fromLink": "CharlotteDunois/Yasmin.html", "link": "CharlotteDunois/Yasmin/Client.html", "name": "CharlotteDunois\\Yasmin\\Client", "doc": "&quot;The client. What else do you expect this to say?&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Client::__construct", "doc": "&quot;What do you expect this to do? It makes a new Client instance. Available client options are as following (all are optional):&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_serialize", "name": "CharlotteDunois\\Yasmin\\Client::serialize", "doc": "&quot;Serializes the class.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_unserialize", "name": "CharlotteDunois\\Yasmin\\Client::unserialize", "doc": "&quot;Unserializes the class and re-registers utils. Automatically creates an event loop.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_getLoop", "name": "CharlotteDunois\\Yasmin\\Client::getLoop", "doc": "&quot;Get the React Event Loop that is stored in this class.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_getOption", "name": "CharlotteDunois\\Yasmin\\Client::getOption", "doc": "&quot;Get a specific option, or the default value.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_getPing", "name": "CharlotteDunois\\Yasmin\\Client::getPing", "doc": "&quot;Calculates the average ping. Or NAN.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_getWSstatus", "name": "CharlotteDunois\\Yasmin\\Client::getWSstatus", "doc": "&quot;Returns the computed WS status across all shards.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_login", "name": "CharlotteDunois\\Yasmin\\Client::login", "doc": "&quot;Login into Discord. Opens a WebSocket Gateway connection. Resolves once a WebSocket connection has been successfully established (does not mean the client is ready).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_destroy", "name": "CharlotteDunois\\Yasmin\\Client::destroy", "doc": "&quot;Cleanly logs out of Discord.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_createGuild", "name": "CharlotteDunois\\Yasmin\\Client::createGuild", "doc": "&quot;Creates a new guild. Resolves with an instance of Guild. Options is as following, everything is optional unless specified:&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_fetchApplication", "name": "CharlotteDunois\\Yasmin\\Client::fetchApplication", "doc": "&quot;Obtains the OAuth Application of the bot from Discord.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_fetchInvite", "name": "CharlotteDunois\\Yasmin\\Client::fetchInvite", "doc": "&quot;Obtains an invite from Discord. Resolves with an instance of Invite.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_fetchUser", "name": "CharlotteDunois\\Yasmin\\Client::fetchUser", "doc": "&quot;Fetches an User from the API. Resolves with an User.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_fetchVoiceRegions", "name": "CharlotteDunois\\Yasmin\\Client::fetchVoiceRegions", "doc": "&quot;Obtains the available voice regions from Discord. Resolves with a Collection of Voice Region instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_fetchWebhook", "name": "CharlotteDunois\\Yasmin\\Client::fetchWebhook", "doc": "&quot;Fetches a webhook from Discord. Resolves with an instance of Webhook.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_generateOAuthInvite", "name": "CharlotteDunois\\Yasmin\\Client::generateOAuthInvite", "doc": "&quot;Generates a link that can be used to invite the bot to a guild. Resolves with a string.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_addTimer", "name": "CharlotteDunois\\Yasmin\\Client::addTimer", "doc": "&quot;Adds a \&quot;client-dependant\&quot; timer. The timer gets automatically cancelled on destroy. The callback can only accept one argument, the client.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_addPeriodicTimer", "name": "CharlotteDunois\\Yasmin\\Client::addPeriodicTimer", "doc": "&quot;Adds a \&quot;client-dependant\&quot; periodic timer. The timer gets automatically cancelled on destroy. The callback can only accept one argument, the client.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_cancelTimer", "name": "CharlotteDunois\\Yasmin\\Client::cancelTimer", "doc": "&quot;Cancels a timer.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_cancelTimers", "name": "CharlotteDunois\\Yasmin\\Client::cancelTimers", "doc": "&quot;Cancels all timers.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_getUtils", "name": "CharlotteDunois\\Yasmin\\Client::getUtils", "doc": "&quot;Returns an array of classes with are registered as Util.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_registerUtil", "name": "CharlotteDunois\\Yasmin\\Client::registerUtil", "doc": "&quot;Registers an Util, if it has a setLoop method. All methods used need to be static.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_destroyUtil", "name": "CharlotteDunois\\Yasmin\\Client::destroyUtil", "doc": "&quot;Destroys an Util and calls &lt;code&gt;destroy&lt;\/code&gt; (requires that it is registered as such).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_on", "name": "CharlotteDunois\\Yasmin\\Client::on", "doc": "&quot;Attach a listener to an event. The method is from the trait - only for documentation purpose here.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_once", "name": "CharlotteDunois\\Yasmin\\Client::once", "doc": "&quot;Attach a listener to an event, for exactly once. The method is from the trait - only for documentation purpose here.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_removeListener", "name": "CharlotteDunois\\Yasmin\\Client::removeListener", "doc": "&quot;Remove specified listener from an event. The method is from the trait - only for documentation purpose here.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Client", "fromLink": "CharlotteDunois/Yasmin/Client.html", "link": "CharlotteDunois/Yasmin/Client.html#method_removeAllListeners", "name": "CharlotteDunois\\Yasmin\\Client::removeAllListeners", "doc": "&quot;Remove all listeners from an event (or all listeners).&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin", "fromLink": "CharlotteDunois/Yasmin.html", "link": "CharlotteDunois/Yasmin/DiscordException.html", "name": "CharlotteDunois\\Yasmin\\DiscordException", "doc": "&quot;Exception for Discord.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\HTTP", "fromLink": "CharlotteDunois/Yasmin/HTTP.html", "link": "CharlotteDunois/Yasmin/HTTP/DiscordAPIException.html", "name": "CharlotteDunois\\Yasmin\\HTTP\\DiscordAPIException", "doc": "&quot;Represents an error from the Discord HTTP API.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\HTTP\\DiscordAPIException", "fromLink": "CharlotteDunois/Yasmin/HTTP/DiscordAPIException.html", "link": "CharlotteDunois/Yasmin/HTTP/DiscordAPIException.html#method___construct", "name": "CharlotteDunois\\Yasmin\\HTTP\\DiscordAPIException::__construct", "doc": "&quot;Constructor.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Activity.html", "name": "CharlotteDunois\\Yasmin\\Models\\Activity", "doc": "&quot;Something someone does.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Activity", "fromLink": "CharlotteDunois/Yasmin/Models/Activity.html", "link": "CharlotteDunois/Yasmin/Models/Activity.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Models\\Activity::__construct", "doc": "&quot;The manual creation of such a class is discouraged. There may be an easy and safe way to create such a class in the future.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Activity", "fromLink": "CharlotteDunois/Yasmin/Models/Activity.html", "link": "CharlotteDunois/Yasmin/Models/Activity.html#method_isRichPresence", "name": "CharlotteDunois\\Yasmin\\Models\\Activity::isRichPresence", "doc": "&quot;Whether this activity is a rich presence.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/AuditLog.html", "name": "CharlotteDunois\\Yasmin\\Models\\AuditLog", "doc": "&quot;Represents a guild audit log.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/AuditLogEntry.html", "name": "CharlotteDunois\\Yasmin\\Models\\AuditLogEntry", "doc": "&quot;Represents a guild audit log entry.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\AuditLogEntry", "fromLink": "CharlotteDunois/Yasmin/Models/AuditLogEntry.html", "link": "CharlotteDunois/Yasmin/Models/AuditLogEntry.html#method_getActionType", "name": "CharlotteDunois\\Yasmin\\Models\\AuditLogEntry::getActionType", "doc": "&quot;Finds the action type from the entry action.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\AuditLogEntry", "fromLink": "CharlotteDunois/Yasmin/Models/AuditLogEntry.html", "link": "CharlotteDunois/Yasmin/Models/AuditLogEntry.html#method_getTargetType", "name": "CharlotteDunois\\Yasmin\\Models\\AuditLogEntry::getTargetType", "doc": "&quot;Finds the target type from the entry action.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Base.html", "name": "CharlotteDunois\\Yasmin\\Models\\Base", "doc": "&quot;Something all Models extend.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/CategoryChannel.html", "name": "CharlotteDunois\\Yasmin\\Models\\CategoryChannel", "doc": "&quot;Represents a guild&#039;s category channel.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\CategoryChannel", "fromLink": "CharlotteDunois/Yasmin/Models/CategoryChannel.html", "link": "CharlotteDunois/Yasmin/Models/CategoryChannel.html#method_getChildren", "name": "CharlotteDunois\\Yasmin\\Models\\CategoryChannel::getChildren", "doc": "&quot;Returns all channels which are childrens of this category.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "doc": "&quot;Channel Storage to store channels, which utilizes Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "fromLink": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage::resolve", "doc": "&quot;Resolves given data to a channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "fromLink": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "fromLink": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "fromLink": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "fromLink": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage::delete", "doc": "&quot;Removes an item.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "fromLink": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html#method_clear", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage::clear", "doc": "&quot;Clears the Storage.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage", "fromLink": "CharlotteDunois/Yasmin/Models/ChannelStorage.html", "link": "CharlotteDunois/Yasmin/Models/ChannelStorage.html#method_getTypeForChannel", "name": "CharlotteDunois\\Yasmin\\Models\\ChannelStorage::getTypeForChannel", "doc": "&quot;Get the type for the channel.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/ClientBase.html", "name": "CharlotteDunois\\Yasmin\\Models\\ClientBase", "doc": "&quot;Something all Models, with the need for a client, extend.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/ClientStatus.html", "name": "CharlotteDunois\\Yasmin\\Models\\ClientStatus", "doc": "&quot;Represents an user&#039;s client status.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "doc": "&quot;Represents the Client User.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "fromLink": "CharlotteDunois/Yasmin/Models/ClientUser.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html#method_setAvatar", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser::setAvatar", "doc": "&quot;Set your avatar. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "fromLink": "CharlotteDunois/Yasmin/Models/ClientUser.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html#method_setStatus", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser::setStatus", "doc": "&quot;Set your status. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "fromLink": "CharlotteDunois/Yasmin/Models/ClientUser.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html#method_setActivity", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser::setActivity", "doc": "&quot;Set your activity. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "fromLink": "CharlotteDunois/Yasmin/Models/ClientUser.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html#method_setGame", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser::setGame", "doc": "&quot;Set your playing game. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "fromLink": "CharlotteDunois/Yasmin/Models/ClientUser.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html#method_setPresence", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser::setPresence", "doc": "&quot;Set your presence. Ratelimit is 5\/60s, the gateway drops all further presence updates. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "fromLink": "CharlotteDunois/Yasmin/Models/ClientUser.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html#method_setUsername", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser::setUsername", "doc": "&quot;Set your username. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\ClientUser", "fromLink": "CharlotteDunois/Yasmin/Models/ClientUser.html", "link": "CharlotteDunois/Yasmin/Models/ClientUser.html#method_createGroupDM", "name": "CharlotteDunois\\Yasmin\\Models\\ClientUser::createGroupDM", "doc": "&quot;Creates a new Group DM with the owner of the access tokens. Resolves with an instance of GroupDMChannel. The structure of the array is as following:&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/DMChannel.html", "name": "CharlotteDunois\\Yasmin\\Models\\DMChannel", "doc": "&quot;Represents a classic DM channel.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\DMChannel", "fromLink": "CharlotteDunois/Yasmin/Models/DMChannel.html", "link": "CharlotteDunois/Yasmin/Models/DMChannel.html#method_isRecipient", "name": "CharlotteDunois\\Yasmin\\Models\\DMChannel::isRecipient", "doc": "&quot;Determines whether a given user is a recipient of this channel.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji", "doc": "&quot;Represents an emoji - both custom and unicode emojis.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_addRestrictedRole", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::addRestrictedRole", "doc": "&quot;Adds a role to the list of roles that can use this emoji. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_addRestrictedRoles", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::addRestrictedRoles", "doc": "&quot;Adds multiple roles to the list of roles that can use this emoji. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::edit", "doc": "&quot;Edits the emoji. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::delete", "doc": "&quot;Deletes the emoji.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_getImageURL", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::getImageURL", "doc": "&quot;Get the image URL of the custom emoji.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_removeRestrictedRole", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::removeRestrictedRole", "doc": "&quot;Removes a role from the list of roles that can use this emoji. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_removeRestrictedRoles", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::removeRestrictedRoles", "doc": "&quot;Removes multiple roles from the list of roles that can use this emoji. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method_setName", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::setName", "doc": "&quot;Sets the new name of the emoji. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Emoji", "fromLink": "CharlotteDunois/Yasmin/Models/Emoji.html", "link": "CharlotteDunois/Yasmin/Models/Emoji.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\Emoji::__toString", "doc": "&quot;Automatically converts to a mention.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/EmojiStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage", "doc": "&quot;Emoji Storage to store emojis, utilizes Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage", "fromLink": "CharlotteDunois/Yasmin/Models/EmojiStorage.html", "link": "CharlotteDunois/Yasmin/Models/EmojiStorage.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage::resolve", "doc": "&quot;Resolves given data to an emoji.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage", "fromLink": "CharlotteDunois/Yasmin/Models/EmojiStorage.html", "link": "CharlotteDunois/Yasmin/Models/EmojiStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage", "fromLink": "CharlotteDunois/Yasmin/Models/EmojiStorage.html", "link": "CharlotteDunois/Yasmin/Models/EmojiStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage", "fromLink": "CharlotteDunois/Yasmin/Models/EmojiStorage.html", "link": "CharlotteDunois/Yasmin/Models/EmojiStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage", "fromLink": "CharlotteDunois/Yasmin/Models/EmojiStorage.html", "link": "CharlotteDunois/Yasmin/Models/EmojiStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\EmojiStorage::delete", "doc": "&quot;Removes an item.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/GroupDMChannel.html", "name": "CharlotteDunois\\Yasmin\\Models\\GroupDMChannel", "doc": "&quot;Represents a Group DM channel.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GroupDMChannel", "fromLink": "CharlotteDunois/Yasmin/Models/GroupDMChannel.html", "link": "CharlotteDunois/Yasmin/Models/GroupDMChannel.html#method_addRecipient", "name": "CharlotteDunois\\Yasmin\\Models\\GroupDMChannel::addRecipient", "doc": "&quot;Adds the given user to the Group DM channel using the given access token. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GroupDMChannel", "fromLink": "CharlotteDunois/Yasmin/Models/GroupDMChannel.html", "link": "CharlotteDunois/Yasmin/Models/GroupDMChannel.html#method_getIconURL", "name": "CharlotteDunois\\Yasmin\\Models\\GroupDMChannel::getIconURL", "doc": "&quot;Returns the group DM&#039;s icon URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GroupDMChannel", "fromLink": "CharlotteDunois/Yasmin/Models/GroupDMChannel.html", "link": "CharlotteDunois/Yasmin/Models/GroupDMChannel.html#method_removeRecipient", "name": "CharlotteDunois\\Yasmin\\Models\\GroupDMChannel::removeRecipient", "doc": "&quot;Removes the given user from the Group DM channel. Resolves with $this.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html", "name": "CharlotteDunois\\Yasmin\\Models\\Guild", "doc": "&quot;Represents a guild. It&#039;s recommended to see if a guild is available before performing operations or reading data from it.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_addMember", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::addMember", "doc": "&quot;Adds the given user to the guild using the OAuth Access Token. Requires the CREATE_INSTANT_INVITE permission. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_ban", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::ban", "doc": "&quot;Bans the given user. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_createChannel", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::createChannel", "doc": "&quot;Creates a new channel in the guild. Resolves with an instance of GuildChannelInterface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_createEmoji", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::createEmoji", "doc": "&quot;Creates a new custom emoji in the guild. Resolves with an instance of Emoji.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_createRole", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::createRole", "doc": "&quot;Creates a new role in the guild. Resolves with an instance of Role.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::delete", "doc": "&quot;Deletes the guild.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::edit", "doc": "&quot;Edits the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchAuditLog", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchAuditLog", "doc": "&quot;Fetch audit log for the guild. Resolves with an instance of AuditLog.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchBan", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchBan", "doc": "&quot;Fetches a specific ban for a user. Resolves with an instance of GuildBan.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchBans", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchBans", "doc": "&quot;Fetch all bans of the guild. Resolves with a Collection of GuildBan instances, mapped by the user ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchInvites", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchInvites", "doc": "&quot;Fetches all invites of the guild. Resolves with a Collection of Invite instances, mapped by their code.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchMember", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchMember", "doc": "&quot;Fetches a specific guild member. Resolves with an instance of GuildMember.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchMembers", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchMembers", "doc": "&quot;Fetches all guild members. If &lt;code&gt;$query&lt;\/code&gt; is used, &lt;code&gt;$limit&lt;\/code&gt; must be set to a non-zero integer. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchPruneMembers", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchPruneMembers", "doc": "&quot;Fetches the amount of members from the guild based on how long they have been inactive which would be pruned. Resolves with an integer.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchVanityInvite", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchVanityInvite", "doc": "&quot;Returns the vanity invite. The guild must be partnered, i.e. have &#039;VANITY_URL&#039; in guild features. Resolves with an instance of Invite.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchVoiceRegions", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchVoiceRegions", "doc": "&quot;Fetches the guild voice regions. Resolves with a Collection of Voice Region instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_fetchWebhooks", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::fetchWebhooks", "doc": "&quot;Fetches the guild&#039;s webhooks. Resolves with a Collection of Webhook instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_getBannerURL", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::getBannerURL", "doc": "&quot;Returns the guild&#039;s banner URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_getIconURL", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::getIconURL", "doc": "&quot;Returns the guild&#039;s icon URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_getNameAcronym", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::getNameAcronym", "doc": "&quot;Returns the guild&#039;s name acronym.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_getSplashURL", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::getSplashURL", "doc": "&quot;Returns the guild&#039;s splash URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_leave", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::leave", "doc": "&quot;Leaves the guild.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_pruneMembers", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::pruneMembers", "doc": "&quot;Prunes members from the guild based on how long they have been inactive. Resolves with an integer or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setAFKChannel", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setAFKChannel", "doc": "&quot;Edits the AFK channel of the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setAFKTimeout", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setAFKTimeout", "doc": "&quot;Edits the AFK timeout of the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setChannelPositions", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setChannelPositions", "doc": "&quot;Batch-updates the guild&#039;s channels positions. Channels is an array of &lt;code&gt;channel ID (string)|GuildChannelInterface =&amp;gt; position (int)&lt;\/code&gt; pairs. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setRolePositions", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setRolePositions", "doc": "&quot;Batch-updates the guild&#039;s roles positions. Roles is an array of &lt;code&gt;role ID (string)|Role =&amp;gt; position (int)&lt;\/code&gt; pairs. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setExplicitContentFilter", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setExplicitContentFilter", "doc": "&quot;Edits the level of the explicit content filter. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setIcon", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setIcon", "doc": "&quot;Updates the guild icon. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setName", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setName", "doc": "&quot;Edits the name of the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setOwner", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setOwner", "doc": "&quot;Sets a new owner for the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setRegion", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setRegion", "doc": "&quot;Edits the region of the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setSplash", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setSplash", "doc": "&quot;Updates the guild splash. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setSystemChannel", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setSystemChannel", "doc": "&quot;Edits the system channel of the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_setVerificationLevel", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::setVerificationLevel", "doc": "&quot;Edits the verification level of the guild. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Guild", "fromLink": "CharlotteDunois/Yasmin/Models/Guild.html", "link": "CharlotteDunois/Yasmin/Models/Guild.html#method_unban", "name": "CharlotteDunois\\Yasmin\\Models\\Guild::unban", "doc": "&quot;Unbans the given user. Resolves with $this.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/GuildBan.html", "name": "CharlotteDunois\\Yasmin\\Models\\GuildBan", "doc": "&quot;Represents a guild ban.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildBan", "fromLink": "CharlotteDunois/Yasmin/Models/GuildBan.html", "link": "CharlotteDunois/Yasmin/Models/GuildBan.html#method_unban", "name": "CharlotteDunois\\Yasmin\\Models\\GuildBan::unban", "doc": "&quot;Unbans the user.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "doc": "&quot;Represents a guild member.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_addRole", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::addRole", "doc": "&quot;Adds a role to the guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_addRoles", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::addRoles", "doc": "&quot;Adds roles to the guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_ban", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::ban", "doc": "&quot;Bans the guild member.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::edit", "doc": "&quot;Edits the guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_getColorRole", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::getColorRole", "doc": "&quot;Gets the role the member is displayed with.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_getDisplayColor", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::getDisplayColor", "doc": "&quot;Gets the displayed color of the member.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_getDisplayHexColor", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::getDisplayHexColor", "doc": "&quot;Gets the displayed color of the member as hex string.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_getHighestRole", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::getHighestRole", "doc": "&quot;Gets the highest role of the member.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_getHoistRole", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::getHoistRole", "doc": "&quot;Gets the role the member is hoisted with.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_isBannable", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::isBannable", "doc": "&quot;Whether the member can be banned by the client user.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_isKickable", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::isKickable", "doc": "&quot;Whether the member can be kicked by the client user.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_kick", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::kick", "doc": "&quot;Kicks the guild member.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_permissionsIn", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::permissionsIn", "doc": "&quot;Returns permissions for a member in a guild channel, taking into account roles and permission overwrites.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_removeRole", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::removeRole", "doc": "&quot;Removes a role from the guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_removeRoles", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::removeRoles", "doc": "&quot;Removes roles from the guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_setDeaf", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::setDeaf", "doc": "&quot;Deafen\/undeafen a guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_setMute", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::setMute", "doc": "&quot;Mute\/unmute a guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_setNickname", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::setNickname", "doc": "&quot;Set the nickname of the guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_setRoles", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::setRoles", "doc": "&quot;Sets the roles of the guild member. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method_setVoiceChannel", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::setVoiceChannel", "doc": "&quot;Moves the guild member to the given voice channel, if connected to voice. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMember", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMember.html", "link": "CharlotteDunois/Yasmin/Models/GuildMember.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMember::__toString", "doc": "&quot;Automatically converts to a mention.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage", "doc": "&quot;Guild Member Storage to store guild members, utilizes Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage::resolve", "doc": "&quot;Resolves given data to a guildmember.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildMemberStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\GuildMemberStorage::delete", "doc": "&quot;Removes an item.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/GuildStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStorage", "doc": "&quot;Guild Storage to store guilds, utilizes Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildStorage.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStorage::resolve", "doc": "&quot;Resolves given data to a guild.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildStorage", "fromLink": "CharlotteDunois/Yasmin/Models/GuildStorage.html", "link": "CharlotteDunois/Yasmin/Models/GuildStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStorage::delete", "doc": "&quot;Removes an item.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/GuildStoreChannel.html", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStoreChannel", "doc": "&quot;Represents a guild&#039;s store channel.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\GuildStoreChannel", "fromLink": "CharlotteDunois/Yasmin/Models/GuildStoreChannel.html", "link": "CharlotteDunois/Yasmin/Models/GuildStoreChannel.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\GuildStoreChannel::__toString", "doc": "&quot;Automatically converts to a mention.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Invite.html", "name": "CharlotteDunois\\Yasmin\\Models\\Invite", "doc": "&quot;Represents an invite.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Invite", "fromLink": "CharlotteDunois/Yasmin/Models/Invite.html", "link": "CharlotteDunois/Yasmin/Models/Invite.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\Invite::delete", "doc": "&quot;Deletes the invite.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Message.html", "name": "CharlotteDunois\\Yasmin\\Models\\Message", "doc": "&quot;Represents a message.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_clearReactions", "name": "CharlotteDunois\\Yasmin\\Models\\Message::clearReactions", "doc": "&quot;Removes all reactions from the message. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_collectReactions", "name": "CharlotteDunois\\Yasmin\\Models\\Message::collectReactions", "doc": "&quot;Collects reactions during a specific duration. Resolves with a Collection of &lt;code&gt;[ $messageReaction, $user ]&lt;\/code&gt; arrays, mapped by their IDs or names (unicode emojis).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Models\\Message::edit", "doc": "&quot;Edits the message. You need to be the author of the message. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\Message::delete", "doc": "&quot;Deletes the message.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_fetchWebhook", "name": "CharlotteDunois\\Yasmin\\Models\\Message::fetchWebhook", "doc": "&quot;Fetches the webhook used to create this message. Resolves with an instance of Webhook.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_getJumpURL", "name": "CharlotteDunois\\Yasmin\\Models\\Message::getJumpURL", "doc": "&quot;Returns the jump to message link for this message.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_pin", "name": "CharlotteDunois\\Yasmin\\Models\\Message::pin", "doc": "&quot;Pins the message. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_react", "name": "CharlotteDunois\\Yasmin\\Models\\Message::react", "doc": "&quot;Reacts to the message with the specified unicode or custom emoji. Resolves with an instance of MessageReaction.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_reply", "name": "CharlotteDunois\\Yasmin\\Models\\Message::reply", "doc": "&quot;Replies to the message. Resolves with an instance of Message, or with a Collection of Message instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method_unpin", "name": "CharlotteDunois\\Yasmin\\Models\\Message::unpin", "doc": "&quot;Unpins the message. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Message", "fromLink": "CharlotteDunois/Yasmin/Models/Message.html", "link": "CharlotteDunois/Yasmin/Models/Message.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\Message::__toString", "doc": "&quot;Automatically converts to the message content.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/MessageActivity.html", "name": "CharlotteDunois\\Yasmin\\Models\\MessageActivity", "doc": "&quot;Represents a message activity.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/MessageApplication.html", "name": "CharlotteDunois\\Yasmin\\Models\\MessageApplication", "doc": "&quot;Represents a message application.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageApplication", "fromLink": "CharlotteDunois/Yasmin/Models/MessageApplication.html", "link": "CharlotteDunois/Yasmin/Models/MessageApplication.html#method_getCoverImageURL", "name": "CharlotteDunois\\Yasmin\\Models\\MessageApplication::getCoverImageURL", "doc": "&quot;Returns the URL of the cover image.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/MessageAttachment.html", "name": "CharlotteDunois\\Yasmin\\Models\\MessageAttachment", "doc": "&quot;Represents an attachment (from a message).&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageAttachment", "fromLink": "CharlotteDunois/Yasmin/Models/MessageAttachment.html", "link": "CharlotteDunois/Yasmin/Models/MessageAttachment.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Models\\MessageAttachment::__construct", "doc": "&quot;Constructs a new instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageAttachment", "fromLink": "CharlotteDunois/Yasmin/Models/MessageAttachment.html", "link": "CharlotteDunois/Yasmin/Models/MessageAttachment.html#method_setAttachment", "name": "CharlotteDunois\\Yasmin\\Models\\MessageAttachment::setAttachment", "doc": "&quot;Sets the attachment.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "doc": "&quot;Represents a received embed from a message. This class can also be used to make a Rich Embed.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::__construct", "doc": "&quot;Constructs a new instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setAuthor", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setAuthor", "doc": "&quot;Set the author of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setColor", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setColor", "doc": "&quot;Set the color of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setDescription", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setDescription", "doc": "&quot;Set the description of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setFooter", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setFooter", "doc": "&quot;Set the footer of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setImage", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setImage", "doc": "&quot;Set the image of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setThumbnail", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setThumbnail", "doc": "&quot;Set the thumbnail of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setTimestamp", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setTimestamp", "doc": "&quot;Set the timestamp of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setTitle", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setTitle", "doc": "&quot;Set the title of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_setURL", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::setURL", "doc": "&quot;Set the URL of this embed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed", "fromLink": "CharlotteDunois/Yasmin/Models/MessageEmbed.html", "link": "CharlotteDunois/Yasmin/Models/MessageEmbed.html#method_addField", "name": "CharlotteDunois\\Yasmin\\Models\\MessageEmbed::addField", "doc": "&quot;Adds a field to this embed.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/MessageMentions.html", "name": "CharlotteDunois\\Yasmin\\Models\\MessageMentions", "doc": "&quot;Holds message mentions.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/MessageReaction.html", "name": "CharlotteDunois\\Yasmin\\Models\\MessageReaction", "doc": "&quot;Represents a message reaction.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageReaction", "fromLink": "CharlotteDunois/Yasmin/Models/MessageReaction.html", "link": "CharlotteDunois/Yasmin/Models/MessageReaction.html#method_fetchUsers", "name": "CharlotteDunois\\Yasmin\\Models\\MessageReaction::fetchUsers", "doc": "&quot;Fetches all the users that gave this reaction. Resolves with a Collection of User instances, mapped by their IDs.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageReaction", "fromLink": "CharlotteDunois/Yasmin/Models/MessageReaction.html", "link": "CharlotteDunois/Yasmin/Models/MessageReaction.html#method_remove", "name": "CharlotteDunois\\Yasmin\\Models\\MessageReaction::remove", "doc": "&quot;Removes an user from the reaction. Resolves with $this.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/MessageStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\MessageStorage", "doc": "&quot;Message Storage to store and handle messages, utilizes Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageStorage", "fromLink": "CharlotteDunois/Yasmin/Models/MessageStorage.html", "link": "CharlotteDunois/Yasmin/Models/MessageStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\MessageStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageStorage", "fromLink": "CharlotteDunois/Yasmin/Models/MessageStorage.html", "link": "CharlotteDunois/Yasmin/Models/MessageStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\MessageStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageStorage", "fromLink": "CharlotteDunois/Yasmin/Models/MessageStorage.html", "link": "CharlotteDunois/Yasmin/Models/MessageStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\MessageStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageStorage", "fromLink": "CharlotteDunois/Yasmin/Models/MessageStorage.html", "link": "CharlotteDunois/Yasmin/Models/MessageStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\MessageStorage::delete", "doc": "&quot;Removes an item.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\MessageStorage", "fromLink": "CharlotteDunois/Yasmin/Models/MessageStorage.html", "link": "CharlotteDunois/Yasmin/Models/MessageStorage.html#method_sweep", "name": "CharlotteDunois\\Yasmin\\Models\\MessageStorage::sweep", "doc": "&quot;Sweeps messages, deletes messages older than the parameter (timestamp - $time). Returns the amount of sweeped messages.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/OAuthApplication.html", "name": "CharlotteDunois\\Yasmin\\Models\\OAuthApplication", "doc": "&quot;Represents an OAuth Application.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\OAuthApplication", "fromLink": "CharlotteDunois/Yasmin/Models/OAuthApplication.html", "link": "CharlotteDunois/Yasmin/Models/OAuthApplication.html#method_getIconURL", "name": "CharlotteDunois\\Yasmin\\Models\\OAuthApplication::getIconURL", "doc": "&quot;Returns the application&#039;s icon URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\OAuthApplication", "fromLink": "CharlotteDunois/Yasmin/Models/OAuthApplication.html", "link": "CharlotteDunois/Yasmin/Models/OAuthApplication.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\OAuthApplication::__toString", "doc": "&quot;Automatically converts to the application name.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/PartialChannel.html", "name": "CharlotteDunois\\Yasmin\\Models\\PartialChannel", "doc": "&quot;Represents a partial channel (of a guild or a group DM).&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PartialChannel", "fromLink": "CharlotteDunois/Yasmin/Models/PartialChannel.html", "link": "CharlotteDunois/Yasmin/Models/PartialChannel.html#method_getIconURL", "name": "CharlotteDunois\\Yasmin\\Models\\PartialChannel::getIconURL", "doc": "&quot;Returns the group DM&#039;s icon URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PartialChannel", "fromLink": "CharlotteDunois/Yasmin/Models/PartialChannel.html", "link": "CharlotteDunois/Yasmin/Models/PartialChannel.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\PartialChannel::__toString", "doc": "&quot;Automatically converts to the channel name.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/PartialGuild.html", "name": "CharlotteDunois\\Yasmin\\Models\\PartialGuild", "doc": "&quot;Represents a partial guild.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PartialGuild", "fromLink": "CharlotteDunois/Yasmin/Models/PartialGuild.html", "link": "CharlotteDunois/Yasmin/Models/PartialGuild.html#method_getIconURL", "name": "CharlotteDunois\\Yasmin\\Models\\PartialGuild::getIconURL", "doc": "&quot;Returns the guild&#039;s icon URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PartialGuild", "fromLink": "CharlotteDunois/Yasmin/Models/PartialGuild.html", "link": "CharlotteDunois/Yasmin/Models/PartialGuild.html#method_getSplashURL", "name": "CharlotteDunois\\Yasmin\\Models\\PartialGuild::getSplashURL", "doc": "&quot;Returns the guild&#039;s splash URL, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PartialGuild", "fromLink": "CharlotteDunois/Yasmin/Models/PartialGuild.html", "link": "CharlotteDunois/Yasmin/Models/PartialGuild.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\PartialGuild::__toString", "doc": "&quot;Automatically converts to the guild name.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/PermissionOverwrite.html", "name": "CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite", "doc": "&quot;Represents a permission overwrite.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite", "fromLink": "CharlotteDunois/Yasmin/Models/PermissionOverwrite.html", "link": "CharlotteDunois/Yasmin/Models/PermissionOverwrite.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite::edit", "doc": "&quot;Edits the permission overwrite. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite", "fromLink": "CharlotteDunois/Yasmin/Models/PermissionOverwrite.html", "link": "CharlotteDunois/Yasmin/Models/PermissionOverwrite.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\PermissionOverwrite::delete", "doc": "&quot;Deletes the permission overwrite.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions", "doc": "&quot;Permissions. Something fabulous.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Permissions", "fromLink": "CharlotteDunois/Yasmin/Models/Permissions.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions::__construct", "doc": "&quot;Constructs a new instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Permissions", "fromLink": "CharlotteDunois/Yasmin/Models/Permissions.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions::has", "doc": "&quot;Checks if a given permission is granted.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Permissions", "fromLink": "CharlotteDunois/Yasmin/Models/Permissions.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html#method_missing", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions::missing", "doc": "&quot;Checks if a given permission is missing.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Permissions", "fromLink": "CharlotteDunois/Yasmin/Models/Permissions.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html#method_add", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions::add", "doc": "&quot;Adds permissions to these ones.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Permissions", "fromLink": "CharlotteDunois/Yasmin/Models/Permissions.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html#method_remove", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions::remove", "doc": "&quot;Removes permissions from these ones.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Permissions", "fromLink": "CharlotteDunois/Yasmin/Models/Permissions.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions::resolve", "doc": "&quot;Resolves a permission name to number.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Permissions", "fromLink": "CharlotteDunois/Yasmin/Models/Permissions.html", "link": "CharlotteDunois/Yasmin/Models/Permissions.html#method_resolveToName", "name": "CharlotteDunois\\Yasmin\\Models\\Permissions::resolveToName", "doc": "&quot;Resolves a permission number to the name. Also checks if a given name is a valid permission.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Presence.html", "name": "CharlotteDunois\\Yasmin\\Models\\Presence", "doc": "&quot;Represents a presence.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Presence", "fromLink": "CharlotteDunois/Yasmin/Models/Presence.html", "link": "CharlotteDunois/Yasmin/Models/Presence.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Models\\Presence::__construct", "doc": "&quot;The manual creation of such an instance is discouraged. There may be an easy and safe way to create such an instance in the future.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/PresenceStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage", "doc": "&quot;Presence Storage, which utilizes Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage", "fromLink": "CharlotteDunois/Yasmin/Models/PresenceStorage.html", "link": "CharlotteDunois/Yasmin/Models/PresenceStorage.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage::resolve", "doc": "&quot;Resolves given data to a presence.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage", "fromLink": "CharlotteDunois/Yasmin/Models/PresenceStorage.html", "link": "CharlotteDunois/Yasmin/Models/PresenceStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage", "fromLink": "CharlotteDunois/Yasmin/Models/PresenceStorage.html", "link": "CharlotteDunois/Yasmin/Models/PresenceStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage", "fromLink": "CharlotteDunois/Yasmin/Models/PresenceStorage.html", "link": "CharlotteDunois/Yasmin/Models/PresenceStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage", "fromLink": "CharlotteDunois/Yasmin/Models/PresenceStorage.html", "link": "CharlotteDunois/Yasmin/Models/PresenceStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\PresenceStorage::delete", "doc": "&quot;Removes an item.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/RichPresenceAssets.html", "name": "CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets", "doc": "&quot;Rich Presence assets.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets", "fromLink": "CharlotteDunois/Yasmin/Models/RichPresenceAssets.html", "link": "CharlotteDunois/Yasmin/Models/RichPresenceAssets.html#method_getLargeImageURL", "name": "CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets::getLargeImageURL", "doc": "&quot;Returns the URL of the large image.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets", "fromLink": "CharlotteDunois/Yasmin/Models/RichPresenceAssets.html", "link": "CharlotteDunois/Yasmin/Models/RichPresenceAssets.html#method_getSmallImageURL", "name": "CharlotteDunois\\Yasmin\\Models\\RichPresenceAssets::getSmallImageURL", "doc": "&quot;Returns the URL of the small image.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Role.html", "name": "CharlotteDunois\\Yasmin\\Models\\Role", "doc": "&quot;Represents a role.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_comparePositionTo", "name": "CharlotteDunois\\Yasmin\\Models\\Role::comparePositionTo", "doc": "&quot;Compares the position from the role to the given role.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Models\\Role::edit", "doc": "&quot;Edits the role with the given options. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\Role::delete", "doc": "&quot;Deletes the role.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_getCalculatedPosition", "name": "CharlotteDunois\\Yasmin\\Models\\Role::getCalculatedPosition", "doc": "&quot;Calculates the positon of the role in the Discord client.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_isEditable", "name": "CharlotteDunois\\Yasmin\\Models\\Role::isEditable", "doc": "&quot;Whether the role can be edited by the client user.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_setColor", "name": "CharlotteDunois\\Yasmin\\Models\\Role::setColor", "doc": "&quot;Set the color of the role. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_setHoist", "name": "CharlotteDunois\\Yasmin\\Models\\Role::setHoist", "doc": "&quot;Set whether or not the role should be hoisted. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_setMentionable", "name": "CharlotteDunois\\Yasmin\\Models\\Role::setMentionable", "doc": "&quot;Set whether the role is mentionable. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_setName", "name": "CharlotteDunois\\Yasmin\\Models\\Role::setName", "doc": "&quot;Set a new name for the role. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_setPermissions", "name": "CharlotteDunois\\Yasmin\\Models\\Role::setPermissions", "doc": "&quot;Set the permissions of the role. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method_setPosition", "name": "CharlotteDunois\\Yasmin\\Models\\Role::setPosition", "doc": "&quot;Set the position of the role. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Role", "fromLink": "CharlotteDunois/Yasmin/Models/Role.html", "link": "CharlotteDunois/Yasmin/Models/Role.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\Role::__toString", "doc": "&quot;Automatically converts to a mention.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/RoleStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\RoleStorage", "doc": "&quot;Role Storage to store a guild&#039;s roles, utilizes Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\RoleStorage", "fromLink": "CharlotteDunois/Yasmin/Models/RoleStorage.html", "link": "CharlotteDunois/Yasmin/Models/RoleStorage.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\RoleStorage::resolve", "doc": "&quot;Resolves given data to a Role.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\RoleStorage", "fromLink": "CharlotteDunois/Yasmin/Models/RoleStorage.html", "link": "CharlotteDunois/Yasmin/Models/RoleStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\RoleStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\RoleStorage", "fromLink": "CharlotteDunois/Yasmin/Models/RoleStorage.html", "link": "CharlotteDunois/Yasmin/Models/RoleStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\RoleStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\RoleStorage", "fromLink": "CharlotteDunois/Yasmin/Models/RoleStorage.html", "link": "CharlotteDunois/Yasmin/Models/RoleStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\RoleStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\RoleStorage", "fromLink": "CharlotteDunois/Yasmin/Models/RoleStorage.html", "link": "CharlotteDunois/Yasmin/Models/RoleStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\RoleStorage::delete", "doc": "&quot;Removes an item.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Shard.html", "name": "CharlotteDunois\\Yasmin\\Models\\Shard", "doc": "&quot;Represents a shard.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html", "name": "CharlotteDunois\\Yasmin\\Models\\Storage", "doc": "&quot;Base class for all storages.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::delete", "doc": "&quot;Removes an item.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_copy", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::copy", "doc": "&quot;Returns a copy of itself. This does not make a copy of the stored data.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_filter", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::filter", "doc": "&quot;Filters the storage by a given callback, keeping only those items that pass a given truth test. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_sort", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::sort", "doc": "&quot;Sorts the collection. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_sortKey", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::sortKey", "doc": "&quot;Sorts the collection by key. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_sortCustom", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::sortCustom", "doc": "&quot;Sorts the collection using a custom sorting function. Returns a new Storage instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Storage", "fromLink": "CharlotteDunois/Yasmin/Models/Storage.html", "link": "CharlotteDunois/Yasmin/Models/Storage.html#method_sortCustomKey", "name": "CharlotteDunois\\Yasmin\\Models\\Storage::sortCustomKey", "doc": "&quot;Sorts the collection by key using a custom sorting function. Returns a new Storage instance.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/TextChannel.html", "name": "CharlotteDunois\\Yasmin\\Models\\TextChannel", "doc": "&quot;Represents a guild&#039;s text channel.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\TextChannel", "fromLink": "CharlotteDunois/Yasmin/Models/TextChannel.html", "link": "CharlotteDunois/Yasmin/Models/TextChannel.html#method_createWebhook", "name": "CharlotteDunois\\Yasmin\\Models\\TextChannel::createWebhook", "doc": "&quot;Create a webhook for the channel. Resolves with the new Webhook instance.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\TextChannel", "fromLink": "CharlotteDunois/Yasmin/Models/TextChannel.html", "link": "CharlotteDunois/Yasmin/Models/TextChannel.html#method_fetchWebhooks", "name": "CharlotteDunois\\Yasmin\\Models\\TextChannel::fetchWebhooks", "doc": "&quot;Fetches the channel&#039;s webhooks. Resolves with a Collection of Webhook instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\TextChannel", "fromLink": "CharlotteDunois/Yasmin/Models/TextChannel.html", "link": "CharlotteDunois/Yasmin/Models/TextChannel.html#method_setSlowmode", "name": "CharlotteDunois\\Yasmin\\Models\\TextChannel::setSlowmode", "doc": "&quot;Sets the slowmode in seconds for this channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\TextChannel", "fromLink": "CharlotteDunois/Yasmin/Models/TextChannel.html", "link": "CharlotteDunois/Yasmin/Models/TextChannel.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\TextChannel::__toString", "doc": "&quot;Automatically converts to a mention.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/User.html", "name": "CharlotteDunois\\Yasmin\\Models\\User", "doc": "&quot;Represents an user on Discord.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method_createDM", "name": "CharlotteDunois\\Yasmin\\Models\\User::createDM", "doc": "&quot;Opens a DM channel to this user. Resolves with an instance of DMChannel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method_deleteDM", "name": "CharlotteDunois\\Yasmin\\Models\\User::deleteDM", "doc": "&quot;Deletes an existing DM channel to this user. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method_getDefaultAvatarURL", "name": "CharlotteDunois\\Yasmin\\Models\\User::getDefaultAvatarURL", "doc": "&quot;Get the default avatar URL.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method_getAvatarURL", "name": "CharlotteDunois\\Yasmin\\Models\\User::getAvatarURL", "doc": "&quot;Get the avatar URL.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method_getDisplayAvatarURL", "name": "CharlotteDunois\\Yasmin\\Models\\User::getDisplayAvatarURL", "doc": "&quot;Get the URL of the displayed avatar.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method_getPresence", "name": "CharlotteDunois\\Yasmin\\Models\\User::getPresence", "doc": "&quot;Gets the presence for this user, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method_fetchUserConnections", "name": "CharlotteDunois\\Yasmin\\Models\\User::fetchUserConnections", "doc": "&quot;Fetches the User&#039;s connections. Requires connections scope. Resolves with a Collection of UserConnection instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\User", "fromLink": "CharlotteDunois/Yasmin/Models/User.html", "link": "CharlotteDunois/Yasmin/Models/User.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\User::__toString", "doc": "&quot;Automatically converts the User instance to a mention.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/UserConnection.html", "name": "CharlotteDunois\\Yasmin\\Models\\UserConnection", "doc": "&quot;Represents an user connection.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "doc": "&quot;User Storage to store and cache users, which utlizies Collection.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "fromLink": "CharlotteDunois/Yasmin/Models/UserStorage.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html#method_resolve", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage::resolve", "doc": "&quot;Resolves given data to an user.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "fromLink": "CharlotteDunois/Yasmin/Models/UserStorage.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html#method_patch", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage::patch", "doc": "&quot;Patches an user (retrieves the user if the user exists), returns null if only the ID is in the array, or creates an user.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "fromLink": "CharlotteDunois/Yasmin/Models/UserStorage.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html#method_has", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage::has", "doc": "&quot;Determines if a given key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "fromLink": "CharlotteDunois/Yasmin/Models/UserStorage.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html#method_get", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage::get", "doc": "&quot;Returns the item at a given key. If the key does not exist, null is returned.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "fromLink": "CharlotteDunois/Yasmin/Models/UserStorage.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html#method_set", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage::set", "doc": "&quot;Sets a key-value pair.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "fromLink": "CharlotteDunois/Yasmin/Models/UserStorage.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage::delete", "doc": "&quot;Removes an item.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\UserStorage", "fromLink": "CharlotteDunois/Yasmin/Models/UserStorage.html", "link": "CharlotteDunois/Yasmin/Models/UserStorage.html#method_sweep", "name": "CharlotteDunois\\Yasmin\\Models\\UserStorage::sweep", "doc": "&quot;Sweeps users falling out of scope (no mutual guilds). Returns the amount of sweeped users.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/VoiceChannel.html", "name": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel", "doc": "&quot;Represents a guild&#039;s voice channel.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel", "fromLink": "CharlotteDunois/Yasmin/Models/VoiceChannel.html", "link": "CharlotteDunois/Yasmin/Models/VoiceChannel.html#method_canSpeak", "name": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel::canSpeak", "doc": "&quot;Whether the client user can speak in this channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel", "fromLink": "CharlotteDunois/Yasmin/Models/VoiceChannel.html", "link": "CharlotteDunois/Yasmin/Models/VoiceChannel.html#method_setBitrate", "name": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel::setBitrate", "doc": "&quot;Sets the bitrate of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel", "fromLink": "CharlotteDunois/Yasmin/Models/VoiceChannel.html", "link": "CharlotteDunois/Yasmin/Models/VoiceChannel.html#method_setUserLimit", "name": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel::setUserLimit", "doc": "&quot;Sets the user limit of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel", "fromLink": "CharlotteDunois/Yasmin/Models/VoiceChannel.html", "link": "CharlotteDunois/Yasmin/Models/VoiceChannel.html#method___toString", "name": "CharlotteDunois\\Yasmin\\Models\\VoiceChannel::__toString", "doc": "&quot;Automatically converts to the name.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/VoiceRegion.html", "name": "CharlotteDunois\\Yasmin\\Models\\VoiceRegion", "doc": "&quot;Represents a voice region.&quot;"},
                    {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Models", "fromLink": "CharlotteDunois/Yasmin/Models.html", "link": "CharlotteDunois/Yasmin/Models/Webhook.html", "name": "CharlotteDunois\\Yasmin\\Models\\Webhook", "doc": "&quot;Represents a webhook.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Webhook", "fromLink": "CharlotteDunois/Yasmin/Models/Webhook.html", "link": "CharlotteDunois/Yasmin/Models/Webhook.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Models\\Webhook::edit", "doc": "&quot;Edits the webhook. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Webhook", "fromLink": "CharlotteDunois/Yasmin/Models/Webhook.html", "link": "CharlotteDunois/Yasmin/Models/Webhook.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Models\\Webhook::delete", "doc": "&quot;Deletes the webhook.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Models\\Webhook", "fromLink": "CharlotteDunois/Yasmin/Models/Webhook.html", "link": "CharlotteDunois/Yasmin/Models/Webhook.html#method_send", "name": "CharlotteDunois\\Yasmin\\Models\\Webhook::send", "doc": "&quot;Executes the webhooks and sends a message to the channel. Resolves with an instance of Message, or a Collection of Message instances, mapped by their ID. Or when using the WebhookClient, it will resolve with a raw Message object (array) or an array of raw Message objects (array).&quot;"},
            {"type": "Trait", "fromName": "CharlotteDunois\\Yasmin\\Traits", "fromLink": "CharlotteDunois/Yasmin/Traits.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "doc": "&quot;The trait all guild channels use.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_createInvite", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::createInvite", "doc": "&quot;Creates an invite. Resolves with an instance of Invite.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_clone", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::clone", "doc": "&quot;Clones a guild channel. Resolves with an instance of GuildChannelInterface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_edit", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::edit", "doc": "&quot;Edits the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_delete", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::delete", "doc": "&quot;Deletes the channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_fetchInvites", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::fetchInvites", "doc": "&quot;Fetches all invites of this channel. Resolves with a Collection of Invite instances, mapped by their code.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_isPermissionsLocked", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::isPermissionsLocked", "doc": "&quot;Whether the permission overwrites match the parent channel (permissions synced).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_permissionsFor", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::permissionsFor", "doc": "&quot;Returns the permissions for the given member.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_overwritesFor", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::overwritesFor", "doc": "&quot;Returns the permissions overwrites for the given member as an associative array.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_overwritePermissions", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::overwritePermissions", "doc": "&quot;Overwrites the permissions for a member or role in this channel. Resolves with an instance of PermissionOverwrite.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_lockPermissions", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::lockPermissions", "doc": "&quot;Locks in the permission overwrites from the parent channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_setName", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::setName", "doc": "&quot;Sets the name of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_setNSFW", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::setNSFW", "doc": "&quot;Sets the nsfw flag of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_setParent", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::setParent", "doc": "&quot;Sets the parent of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_setPermissionOverwrites", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::setPermissionOverwrites", "doc": "&quot;Sets the permission overwrites of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_setPosition", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::setPosition", "doc": "&quot;Sets the position of the channel. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/GuildChannelTrait.html#method_setTopic", "name": "CharlotteDunois\\Yasmin\\Traits\\GuildChannelTrait::setTopic", "doc": "&quot;Sets the topic of the channel. Resolves with $this.&quot;"},
            {"type": "Trait", "fromName": "CharlotteDunois\\Yasmin\\Traits", "fromLink": "CharlotteDunois/Yasmin/Traits.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "doc": "&quot;The text based channel trait.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_bulkDelete", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::bulkDelete", "doc": "&quot;Deletes multiple messages at once. Resolves with $this.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_collectMessages", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::collectMessages", "doc": "&quot;Collects messages during a specific duration (and max. amount). Resolves with a Collection of Message instances, mapped by their IDs.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_fetchMessage", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::fetchMessage", "doc": "&quot;Fetches a specific message using the ID. Resolves with an instance of Message.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_fetchMessages", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::fetchMessages", "doc": "&quot;Fetches messages of this channel. Resolves with a Collection of Message instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_getLastMessage", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::getLastMessage", "doc": "&quot;Gets the last message in this channel if cached, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_send", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::send", "doc": "&quot;Sends a message to a channel. Resolves with an instance of Message, or a Collection of Message instances, mapped by their ID.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_startTyping", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::startTyping", "doc": "&quot;Starts sending the typing indicator in this channel. Counts up a triggered typing counter.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_stopTyping", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::stopTyping", "doc": "&quot;Stops sending the typing indicator in this channel. Counts down a triggered typing counter.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_typingCount", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::typingCount", "doc": "&quot;Returns the amount of user typing in this channel.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_isTyping", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::isTyping", "doc": "&quot;Determines whether the given user is typing in this channel or not.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait", "fromLink": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html", "link": "CharlotteDunois/Yasmin/Traits/TextChannelTrait.html#method_isTypingSince", "name": "CharlotteDunois\\Yasmin\\Traits\\TextChannelTrait::isTypingSince", "doc": "&quot;Determines whether how long the given user has been typing in this channel. Returns -1 if the user is not typing.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/Collector.html", "name": "CharlotteDunois\\Yasmin\\Utils\\Collector", "doc": "&quot;A collector is an util to collect elements from events.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\Collector", "fromLink": "CharlotteDunois/Yasmin/Utils/Collector.html", "link": "CharlotteDunois/Yasmin/Utils/Collector.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Utils\\Collector::__construct", "doc": "&quot;The handler gets invoked as `$handler(.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\Collector", "fromLink": "CharlotteDunois/Yasmin/Utils/Collector.html", "link": "CharlotteDunois/Yasmin/Utils/Collector.html#method_collect", "name": "CharlotteDunois\\Yasmin\\Utils\\Collector::collect", "doc": "&quot;Starts collecting. Resolves with a collection.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\Collector", "fromLink": "CharlotteDunois/Yasmin/Utils/Collector.html", "link": "CharlotteDunois/Yasmin/Utils/Collector.html#method_stop", "name": "CharlotteDunois\\Yasmin\\Utils\\Collector::stop", "doc": "&quot;This will stop the collector.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/DataHelpers.html", "name": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers", "doc": "&quot;Data Helper methods.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/DataHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/DataHelpers.html#method_resolveColor", "name": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers::resolveColor", "doc": "&quot;Resolves a color to an integer.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/DataHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/DataHelpers.html#method_makeDateTime", "name": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers::makeDateTime", "doc": "&quot;Makes a DateTime instance from an UNIX timestamp and applies the default timezone.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/DataHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/DataHelpers.html#method_makeBase64URI", "name": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers::makeBase64URI", "doc": "&quot;Turns input into a base64-encoded data URI.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/DataHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/DataHelpers.html#method_typecastVariable", "name": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers::typecastVariable", "doc": "&quot;Typecasts the variable to the type, if not null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/DataHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/DataHelpers.html#method_applyOptions", "name": "CharlotteDunois\\Yasmin\\Utils\\DataHelpers::applyOptions", "doc": "&quot;Converts the input to the specified options.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/EventHelpers.html", "name": "CharlotteDunois\\Yasmin\\Utils\\EventHelpers", "doc": "&quot;Event Helper methods.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\EventHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/EventHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/EventHelpers.html#method_waitForEvent", "name": "CharlotteDunois\\Yasmin\\Utils\\EventHelpers::waitForEvent", "doc": "&quot;Waits for a specific type of event to get emitted. Additional filter may be applied to look for a specific event (invoked as `$filter(.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/FileHelpers.html", "name": "CharlotteDunois\\Yasmin\\Utils\\FileHelpers", "doc": "&quot;File Helper methods.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\FileHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/FileHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/FileHelpers.html#method_getFilesystem", "name": "CharlotteDunois\\Yasmin\\Utils\\FileHelpers::getFilesystem", "doc": "&quot;Returns the stored React Filesystem instance, or null.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\FileHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/FileHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/FileHelpers.html#method_setFilesystem", "name": "CharlotteDunois\\Yasmin\\Utils\\FileHelpers::setFilesystem", "doc": "&quot;Sets the React Filesystem instance, or disables it.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\FileHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/FileHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/FileHelpers.html#method_resolveFileResolvable", "name": "CharlotteDunois\\Yasmin\\Utils\\FileHelpers::resolveFileResolvable", "doc": "&quot;Resolves filepath and URL into file data - returns it if it&#039;s neither. Resolves with a string.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/ImageHelpers.html", "name": "CharlotteDunois\\Yasmin\\Utils\\ImageHelpers", "doc": "&quot;Image Helper utilities.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\ImageHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/ImageHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/ImageHelpers.html#method_getImageExtension", "name": "CharlotteDunois\\Yasmin\\Utils\\ImageHelpers::getImageExtension", "doc": "&quot;Returns the default extension for an image.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\ImageHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/ImageHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/ImageHelpers.html#method_isPowerOfTwo", "name": "CharlotteDunois\\Yasmin\\Utils\\ImageHelpers::isPowerOfTwo", "doc": "&quot;Returns whether the input number is a power of 2.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html", "name": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers", "doc": "&quot;Message Helper methods.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html#method_cleanContent", "name": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers::cleanContent", "doc": "&quot;Cleans the text from mentions, by providing a context message.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html#method_escapeMarkdown", "name": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers::escapeMarkdown", "doc": "&quot;Escapes any Discord-flavour markdown in a string.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html#method_parseMentions", "name": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers::parseMentions", "doc": "&quot;Parses mentions in a text. Resolves with an array of &lt;code&gt;[ &#039;type&#039; =&amp;gt; string, &#039;ref&#039; =&amp;gt; Models ]&lt;\/code&gt; arrays, in the order they were parsed.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html#method_resolveMessageOptionsFiles", "name": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers::resolveMessageOptionsFiles", "doc": "&quot;Resolves files of Message Options.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/MessageHelpers.html#method_splitMessage", "name": "CharlotteDunois\\Yasmin\\Utils\\MessageHelpers::splitMessage", "doc": "&quot;Splits a string into multiple chunks at a designated character that do not exceed a specific length.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/Snowflake.html", "name": "CharlotteDunois\\Yasmin\\Utils\\Snowflake", "doc": "&quot;Represents a Snowflake.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\Snowflake", "fromLink": "CharlotteDunois/Yasmin/Utils/Snowflake.html", "link": "CharlotteDunois/Yasmin/Utils/Snowflake.html#method___construct", "name": "CharlotteDunois\\Yasmin\\Utils\\Snowflake::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\Snowflake", "fromLink": "CharlotteDunois/Yasmin/Utils/Snowflake.html", "link": "CharlotteDunois/Yasmin/Utils/Snowflake.html#method_deconstruct", "name": "CharlotteDunois\\Yasmin\\Utils\\Snowflake::deconstruct", "doc": "&quot;Deconstruct a snowflake.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\Snowflake", "fromLink": "CharlotteDunois/Yasmin/Utils/Snowflake.html", "link": "CharlotteDunois/Yasmin/Utils/Snowflake.html#method_generate", "name": "CharlotteDunois\\Yasmin\\Utils\\Snowflake::generate", "doc": "&quot;Generates a new snowflake.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\Snowflake", "fromLink": "CharlotteDunois/Yasmin/Utils/Snowflake.html", "link": "CharlotteDunois/Yasmin/Utils/Snowflake.html#method_getShardID", "name": "CharlotteDunois\\Yasmin\\Utils\\Snowflake::getShardID", "doc": "&quot;Compute the shard ID from the snowflake.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin\\Utils", "fromLink": "CharlotteDunois/Yasmin/Utils.html", "link": "CharlotteDunois/Yasmin/Utils/URLHelpers.html", "name": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers", "doc": "&quot;URL Helper methods.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/URLHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/URLHelpers.html#method_setHTTPClient", "name": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers::setHTTPClient", "doc": "&quot;Set the HTTP client used in Yasmin (and in this utility).&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/URLHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/URLHelpers.html#method_getHTTPClient", "name": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers::getHTTPClient", "doc": "&quot;Returns the client. This method may be changed at any time.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/URLHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/URLHelpers.html#method_makeRequest", "name": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers::makeRequest", "doc": "&quot;Makes an asynchronous request. Resolves with an instance of ResponseInterface.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/URLHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/URLHelpers.html#method_resolveURLToData", "name": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers::resolveURLToData", "doc": "&quot;Asynchronously resolves a given URL to the response body. Resolves with a string.&quot;"},
                    {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers", "fromLink": "CharlotteDunois/Yasmin/Utils/URLHelpers.html", "link": "CharlotteDunois/Yasmin/Utils/URLHelpers.html#method_applyRequestOptions", "name": "CharlotteDunois\\Yasmin\\Utils\\URLHelpers::applyRequestOptions", "doc": "&quot;Applies request options to the request.&quot;"},
            {"type": "Class", "fromName": "CharlotteDunois\\Yasmin", "fromLink": "CharlotteDunois/Yasmin.html", "link": "CharlotteDunois/Yasmin/WebhookClient.html", "name": "CharlotteDunois\\Yasmin\\WebhookClient", "doc": "&quot;The webhook client.&quot;"},
                                                        {"type": "Method", "fromName": "CharlotteDunois\\Yasmin\\WebhookClient", "fromLink": "CharlotteDunois/Yasmin/WebhookClient.html", "link": "CharlotteDunois/Yasmin/WebhookClient.html#method___construct", "name": "CharlotteDunois\\Yasmin\\WebhookClient::__construct", "doc": "&quot;Constructor.&quot;"},
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


